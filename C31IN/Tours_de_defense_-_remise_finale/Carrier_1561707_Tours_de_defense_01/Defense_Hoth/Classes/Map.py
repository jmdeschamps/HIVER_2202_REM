from Classes.Vague import *
from Classes.Creep import *


class Map:
    def __init__(self):
        self.parent = None
        self.sentier = None
        self.composition_vagues = None
        self.total_creeps = 0

    def creer_vague(self, troopers=0, droids=0, atAts=0, vader=0):
        vague = Vague()
        if troopers > 0:
            for trooper in range(troopers):
                vague.ajouter(Trooper(self.parent.getID(), self.parent, self.sentier[randrange(0, len(self.sentier))]))
                self.total_creeps += 1
        if droids > 0:
            for droid in range(droids):
                vague.ajouter(Droid(self.parent.getID(), self.parent, self.sentier[randrange(0, len(self.sentier))]))
                self.total_creeps += 1
        if atAts > 0:
            for atAt in range(atAts):
                vague.ajouter(AtAt(self.parent.getID(), self.parent, self.sentier[randrange(0, len(self.sentier))]))
                self.total_creeps += 1
        if vader > 0:
            for boss in range(vader):
                vague.ajouter(Vader(self.parent.getID(), self.parent, self.sentier[randrange(0, len(self.sentier))]))
                self.total_creeps += 1
        return vague


class Debarquement(Map):
    def __init__(self, parent):
        super().__init__()
        self.parent = parent
        self.name = "Debarquement de l'Empire"
        self.path_fichier = "./Carte/debarquement.png"
        self.sentier = [
            # Sentier 1
            [[10, 363], [58, 353], [104, 344], [138, 344], [180, 339], [238, 320], [250, 315], [269, 314],
             [313, 314], [392, 307], [437, 306], [479, 306], [499, 320], [523, 327], [563, 347], [580, 369],
             [620, 402], [645, 430], [662, 436], [688, 449], [713, 467], [758, 489], [808, 499], [855, 507],
             [894, 502], [940, 501], [985, 489], [1044, 489], [1087, 465], [1125, 458], [1153, 457], [1181, 454],
             [1192, 444]],
            # Sentier 2
            [[10, 363], [58, 353], [104, 344], [138, 344], [180, 339], [238, 320], [250, 315], [269, 314],
             [313, 314], [392, 307], [437, 306], [479, 306], [499, 320], [523, 327], [563, 347], [580, 369],
             [620, 402], [645, 430], [662, 436], [688, 449], [713, 467], [758, 489], [808, 499], [855, 507],
             [894, 502], [940, 501], [985, 489], [1044, 489], [1087, 465], [1125, 458], [1153, 457], [1181, 454],
             [1192, 444]]
        ]


        # debug run
        #self.composition_vagues = [self.creer_vague(0, 0, 1, 0)]

        self.composition_vagues = [self.creer_vague(10),
                                   self.creer_vague(13, 6),
                                   self.creer_vague(12, 6, 1),
                                   self.creer_vague(17, 8, 3),
                                   self.creer_vague(16, 17, 4, 1)]

class Grotte(Map):
    def __init__(self, parent):
        super().__init__()
        self.parent = parent
        self.name = "Ambuscade dans la grotte"
        self.path_fichier = "./Carte/grotte.png"

        self.sentier = [
            [[177, 7], [180, 22], [189, 37], [193, 46], [198, 62], [202, 74], [208, 87], [208, 95], [212, 102],
             [222, 111], [224, 119], [228, 128], [230, 133], [236, 142], [240, 147], [242, 153], [247, 160], [254, 166],
             [258, 176], [260, 184], [268, 190], [279, 196], [286, 202], [289, 211], [298, 219], [307, 224], [316, 232],
             [323, 237], [335, 248], [343, 255], [359, 266], [370, 273], [382, 282], [390, 289], [398, 296], [401, 303],
             [412, 298], [429, 290], [446, 290], [463, 287], [476, 285], [504, 283], [510, 283], [525, 278], [541, 278],
             [551, 278], [565, 275], [574, 282], [583, 280], [589, 281], [608, 279], [618, 280], [637, 283], [650, 286],
             [659, 294], [666, 300], [671, 307], [679, 313], [688, 318], [698, 321], [712, 328], [722, 339], [731, 348],
             [737, 359], [746, 370], [752, 381], [759, 392], [763, 399], [770, 411], [780, 419], [783, 426], [789, 439],
             [796, 455], [802, 465], [803, 468], [805, 480], [809, 487], [812, 495], [817, 518], [818, 528], [828, 538],
             [850, 546], [872, 546], [889, 550], [900, 552], [911, 555], [920, 553], [933, 557], [947, 563], [959, 565],
             [973, 566], [985, 568], [997, 569], [1010, 571], [1032, 572], [1054, 574], [1068, 579], [1078, 579],
             [1085, 579], [1094, 579], [1102, 584], [1114, 584], [1131, 585], [1135, 585], [1144, 585], [1151, 588],
             [1157, 586], [1166, 589], [1178, 589], [1184, 588], [1189, 588], [1195, 588], [1195, 590]],
            # Sentier 2
            [[182, 2], [184, 8], [186, 26], [190, 39], [194, 50], [202, 64], [205, 71], [207, 78], [210, 86], [216, 94],
             [223, 103], [227, 111], [233, 120], [241, 132], [242, 145], [253, 156], [272, 175], [277, 184], [283, 193],
             [295, 201], [304, 214], [314, 230], [317, 240], [326, 248], [339, 255], [348, 264], [365, 281], [365, 294],
             [369, 315], [366, 328], [358, 348], [349, 362], [344, 370], [338, 379], [333, 393], [323, 401], [318, 417],
             [314, 431], [312, 442], [310, 454], [308, 470], [303, 485], [302, 509], [302, 515], [300, 526], [301, 546],
             [301, 563], [315, 580], [323, 594], [337, 604], [344, 616], [350, 628], [357, 630], [367, 641], [382, 647],
             [396, 655], [411, 662], [433, 670], [450, 671], [468, 673], [486, 677], [508, 677], [523, 675], [530, 676],
             [546, 669], [557, 664], [566, 656], [585, 644], [594, 638], [608, 630], [623, 610], [639, 610], [668, 595],
             [682, 586], [696, 581], [708, 577], [725, 568], [737, 563], [749, 559], [759, 558], [775, 557], [803, 555],
             [813, 557], [836, 558], [849, 559], [876, 558], [892, 565], [901, 564], [914, 565], [922, 574], [940, 573],
             [948, 576], [965, 579], [981, 585], [960, 578], [975, 578], [985, 576], [994, 580], [1002, 581],
             [1039, 587], [1049, 590], [1060, 589], [1073, 590], [1082, 591], [1091, 590], [1105, 590], [1117, 590],
             [1127, 590], [1134, 589], [1150, 594], [1162, 593], [1176, 599], [1187, 599], [1193, 599], [1195, 602]]
            ]

        # Vague test gif/animation
        #self.composition_vagues = [self.creer_vague(5, 5, 5, 0)]

        self.composition_vagues = [self.creer_vague(15),
                                   self.creer_vague(13, 7),
                                   self.creer_vague(17, 6, 1),
                                   self.creer_vague(20, 8, 3),
                                   self.creer_vague(30, 16, 6, 1)]


class Plaines(Map):
    def __init__(self, parent):
        super().__init__()
        self.parent = parent
        self.name = "Dernière ligne de défense"
        self.path_fichier = "./Carte/plaines.png"
        self.sentier = [  # Sentier 1
            [[872, 897], [884, 888], [898, 876], [911, 867], [940, 849], [966, 836], [972, 831], [982, 825], [994, 815],
             [1008, 807], [1021, 796], [1025, 793], [1027, 787], [1034, 777], [1040, 767], [1035, 760], [1044, 756],
             [1050, 745], [1057, 732], [1058, 723], [1061, 714], [1060, 702], [1063, 690], [1065, 680], [1064, 665],
             [1054, 647], [1029, 629], [1026, 622], [1006, 616], [992, 616], [973, 614], [965, 614], [930, 617],
             [926, 627], [903, 642], [888, 651], [873, 660], [861, 667], [840, 675], [807, 684], [802, 693], [791, 703],
             [774, 712], [764, 719], [747, 724], [732, 736], [719, 740], [700, 745], [687, 749], [670, 748], [649, 752],
             [630, 752], [615, 746], [594, 742], [562, 733], [548, 728], [536, 720], [518, 703], [511, 692], [491, 686],
             [485, 673], [466, 657], [455, 649], [449, 637], [438, 628], [429, 618], [419, 609], [411, 593], [391, 585],
             [378, 582], [364, 577], [350, 573], [332, 567], [316, 563], [300, 554], [272, 548], [261, 548], [247, 547],
             [233, 546], [212, 548], [209, 548], [186, 548], [179, 547], [162, 546], [152, 546], [139, 546], [132, 547],
             [120, 547], [106, 546], [101, 546], [96, 546], [88, 547], [72, 547], [57, 547], [46, 547], [31, 547],
             [15, 544], [7, 542]],
            # Sentier 2
            [[4, 358], [23, 358], [43, 358], [58, 361], [75, 363], [87, 360], [99, 355], [112, 360], [119, 358],
             [128, 357], [138, 355], [147, 352], [156, 354], [168, 355], [178, 351], [186, 352], [199, 348], [205, 340],
             [210, 339], [221, 338], [233, 335], [245, 330], [259, 329], [277, 321], [282, 317], [292, 311], [304, 301],
             [316, 299], [328, 292], [339, 285], [346, 278], [359, 270], [383, 256], [394, 245], [407, 231], [414, 221],
             [423, 212], [438, 202], [447, 190], [455, 180], [466, 171], [482, 157], [505, 147], [524, 137], [542, 125],
             [572, 121], [593, 113], [628, 108], [654, 112], [684, 118], [714, 130], [727, 147], [739, 169], [738, 187],
             [742, 201], [745, 228], [744, 251], [738, 265], [729, 291], [724, 311], [717, 332], [712, 354], [712, 378],
             [721, 406], [723, 419], [731, 432], [742, 447], [760, 462], [776, 468], [792, 470], [817, 464], [833, 464],
             [860, 462], [890, 452], [901, 447], [915, 445], [928, 438], [937, 431], [948, 427], [971, 423], [989, 410],
             [999, 405], [1021, 398], [1038, 396], [1052, 383], [1064, 379], [1086, 375], [1105, 369], [1124, 361],
             [1136, 350], [1145, 346], [1164, 343], [1174, 335], [1181, 335], [1188, 335], [1193, 333], [1196, 333]]
        ]

        self.composition_vagues = [self.creer_vague(5),
                                   self.creer_vague(3, 2),
                                   self.creer_vague(2, 2, 1),
                                   self.creer_vague(7, 4, 3),
                                   self.creer_vague(6, 7, 2, 1)]
